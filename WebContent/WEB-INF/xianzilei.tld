<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">
	<!-- description用来添加对taglib(标签库)的描述 -->
	<description>贤子磊的自定义标签库</description>
	<!--taglib(标签库)的版本号 -->
	<tlib-version>1.0</tlib-version>
	<short-name>XzlTagLibrary</short-name>
	<!-- 为自定义标签库设置一个uri，uri以/开头，/后面的内容随便写，如这里的/gacl ， 在Jsp页面中引用标签库时，需要通过uri找到标签库 
		在Jsp页面中就要这样引入标签库：<%@taglib uri="/gacl" prefix="gacl"%> -->
	<uri>/xianzilei</uri>

	<!--一个taglib(标签库)中包含多个自定义标签，每一个自定义标签使用一个tag标记来描述 -->
	<!-- 一个tag标记对应一个自定义标签 -->
	<tag>
		<description>这个标签的作用是用来输出客户端的IP地址</description>
		<!-- 为标签处理器类配一个标签名，在Jsp页面中使用标签时是通过标签名来找到要调用的标签处理器类的 通过viewIP就能找到对应的me.gacl.web.tag.ViewIPTag类 -->
		<name>viewIP</name>
		<!-- 标签对应的处理器类 -->
		<tag-class>com.jicl.tag.ViewIpTag</tag-class>
		<!-- body-content标签取值：
		 	1.empty：空标记，即起始标记和结束标记之间没有内容
		 	2.scriptless：接受文本、EL和JSP动作，但不能含有脚本元素
		 	3.JSP：体包含JSP元素，如EL表达式，标准或定制动作以及脚本元素
		 	4.tagdependent：体中可以包含看似为JSP元素的内容，但是容器不对其进行计算（当体中的内容与JSP元素产生混淆时采用这个，较少用） -->
		<body-content>empty</body-content>
	</tag>
	
	<tag>
		<description>控制标签是否执行</description>
		<name>tag1</name>
		<!-- 标签对应的处理器类 -->
		<tag-class>com.jicl.tag.TagDemoOne</tag-class>
		<body-content>scriptless</body-content>
	</tag>
	
	<tag>
		<description>控制JSP页面是否继续执行</description>
		<name>tag2</name>
		<!-- 标签对应的处理器类 -->
		<tag-class>com.jicl.tag.TagDemoTwo</tag-class>
		<body-content>empty</body-content>
	</tag>
	
	<tag>
		<description>控制标签的执行次数</description>
		<name>tag3</name>
		<!-- 标签对应的处理器类 -->
		<tag-class>com.jicl.tag.TagDemoThree</tag-class>
		<body-content>scriptless</body-content>
	</tag>
	
	<tag>
		<description>修改标签内容</description>
		<name>tag4</name>
		<!-- 标签对应的处理器类 -->
		<tag-class>com.jicl.tag.TagDemoFour</tag-class>
		<body-content>scriptless</body-content>
	</tag>

</taglib>